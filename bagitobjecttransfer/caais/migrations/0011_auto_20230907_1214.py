# Generated by Django 3.2.20 on 2023-09-07 17:14

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('caais', '0010_alter_archivalunit_archival_unit'),
    ]

    operations = [
        migrations.CreateModel(
            name='AcquisitionMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Record the acquisition method in accordance with a controlled vocabulary', max_length=128, unique=True)),
                ('description', models.TextField(blank=True, default='')),
            ],
            options={
                'verbose_name': 'Acquisition Method',
                'verbose_name_plural': 'Acquisition Methods',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Appraisal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appraisal_value', models.TextField(blank=True, default='', help_text='Where the accession process includes appraisal activities, record the appraisal statement value.')),
                ('appraisal_note', models.TextField(blank=True, default='', help_text='Record any other information relevant to describing the appraisal activities.')),
            ],
            options={
                'verbose_name': 'Appraisal',
                'verbose_name_plural': 'Appraisals',
            },
        ),
        migrations.CreateModel(
            name='AppraisalType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Record the appraisal type in accordance with a controlled vocabulary maintained by the repository', max_length=128, unique=True)),
                ('description', models.TextField(blank=True, default='')),
            ],
            options={
                'verbose_name': 'Appraisal Type',
                'verbose_name_plural': 'Appraisal Types',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AssociatedDocumentation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('associated_documentation_title', models.TextField(blank=True, default='', help_text='Record the title of the associated documentation')),
                ('associated_documentation_note', models.TextField(blank=True, default='', help_text='Record any other information relevant to describing documentation associated to the accessioned material')),
            ],
            options={
                'verbose_name': 'Associated Documentation',
                'verbose_name_plural': 'Associated Documentation',
            },
        ),
        migrations.CreateModel(
            name='AssociatedDocumentationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Where the accession process generates associated documents, record the associated documentation type in accordance with a controlled vocabulary maintained by the repository.', max_length=128, unique=True)),
                ('description', models.TextField(blank=True, default='')),
            ],
            options={
                'verbose_name': 'Appraisal Type',
                'verbose_name_plural': 'Appraisal Types',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CarrierType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Record the physical format of an object that supports or carries archival materials using a controlled vocabulary maintained by the repository', max_length=128, unique=True)),
                ('description', models.TextField(blank=True, default='')),
            ],
            options={
                'verbose_name': 'Carrier type',
                'verbose_name_plural': 'Carrier types',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Record the type of material contained in the units measured, i.e., the genre of the material', max_length=128, unique=True)),
                ('description', models.TextField(blank=True, default='')),
            ],
            options={
                'verbose_name': 'Content type',
                'verbose_name_plural': 'Content types',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CreationOrRevisionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Record the action type in accordance with a controlled vocabulary maintained by the repository.', max_length=128, unique=True)),
                ('description', models.TextField(blank=True, default='')),
            ],
            options={
                'verbose_name': 'Date of Creation or Revision Type',
                'verbose_name_plural': 'Date of Creation or Revision Types',
            },
        ),
        migrations.CreateModel(
            name='DispositionAuthority',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disposition_authority', models.TextField(help_text='Record information about any legal instruments that apply to the accessioned material. Legal instruments include statutes, records schedules or disposition authorities, and donor agreements')),
            ],
            options={
                'verbose_name': 'Disposition Authority',
                'verbose_name_plural': 'Disposition Authorities',
            },
        ),
        migrations.CreateModel(
            name='PreliminaryCustodialHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preliminary_custodial_history', models.TextField(help_text="Provide relevant custodial history information in accordance with the repository's descriptive standard. Record the successive transfers of ownership, responsibility and/or custody of the accessioned material prior to its transfer to the repository")),
            ],
            options={
                'verbose_name': 'Preliminary Custodial History',
                'verbose_name_plural': 'Preliminary Custodial Histories',
            },
        ),
        migrations.CreateModel(
            name='PreliminaryScopeAndContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preliminary_scope_and_content', models.TextField(help_text="Record a preliminary description that may include: functions and activities that resulted in the material's generation, dates, the geographic area to which the material pertains, subject matter, arrangement, classification, and documentary forms")),
            ],
            options={
                'verbose_name': 'Preliminary Scope and Content',
                'verbose_name_plural': 'Preliminary Scope and Content',
            },
        ),
        migrations.CreateModel(
            name='PreservationRequirements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preservation_requirements_value', models.TextField(blank=True, default='', help_text='Record information about the assessment of the material with respect to its physical condition, dependencies, processing or access')),
                ('preservation_requirements_note', models.TextField(blank=True, default='', help_text='Record any other information relevant to the long-term preservation of the material')),
            ],
            options={
                'verbose_name': 'Preservation Requirements',
                'verbose_name_plural': 'Preservation Requirements',
            },
        ),
        migrations.CreateModel(
            name='PreservationRequirementsType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Record information about the assessment of the material with respect to its physical condition, dependencies, processing or access.', max_length=128, unique=True)),
                ('description', models.TextField(blank=True, default='')),
            ],
            options={
                'verbose_name': 'Preservation Requirements Type',
                'verbose_name_plural': 'Preservation Requirements Types',
                'abstract': False,
            },
        ),
        migrations.RemoveField(
            model_name='materialassessmentstatement',
            name='assessment_type',
        ),
        migrations.RemoveField(
            model_name='materialassessmentstatement',
            name='metadata',
        ),
        migrations.AlterModelOptions(
            name='archivalunit',
            options={'verbose_name': 'Archival Unit', 'verbose_name_plural': 'Archival Units'},
        ),
        migrations.AlterModelOptions(
            name='extentstatement',
            options={'verbose_name': 'Extent Statement', 'verbose_name_plural': 'Extent Statements'},
        ),
        migrations.AlterModelOptions(
            name='identifier',
            options={'verbose_name': 'Identifier', 'verbose_name_plural': 'Identifiers'},
        ),
        migrations.AlterModelOptions(
            name='metadata',
            options={'verbose_name': 'CAAIS Metadata', 'verbose_name_plural': 'CAAIS Metadata'},
        ),
        migrations.AlterModelOptions(
            name='sourceconfidentiality',
            options={'verbose_name': 'Source Confidentiality', 'verbose_name_plural': 'Source Confidentialities'},
        ),
        migrations.AlterModelOptions(
            name='sourceofmaterial',
            options={'verbose_name': 'Source of Material', 'verbose_name_plural': 'Sources of Material'},
        ),
        migrations.AlterModelOptions(
            name='sourcerole',
            options={'verbose_name': 'Source Role', 'verbose_name_plural': 'Source Roles'},
        ),
        migrations.AlterModelOptions(
            name='sourcetype',
            options={'verbose_name': 'Source Type', 'verbose_name_plural': 'Source Types'},
        ),
        migrations.AlterModelOptions(
            name='status',
            options={'verbose_name': 'Status', 'verbose_name_plural': 'Statuses'},
        ),
        migrations.AlterModelOptions(
            name='storagelocation',
            options={'verbose_name': 'Storage Location', 'verbose_name_plural': 'Storage Locations'},
        ),
        migrations.RenameField(
            model_name='dateofcreationorrevision',
            old_name='action_date',
            new_name='creation_or_revision_date',
        ),
        migrations.RenameField(
            model_name='dateofcreationorrevision',
            old_name='action_note',
            new_name='creation_or_revision_note',
        ),
        migrations.RemoveField(
            model_name='dateofcreationorrevision',
            name='action_agent',
        ),
        migrations.RemoveField(
            model_name='dateofcreationorrevision',
            name='action_type',
        ),
        migrations.RemoveField(
            model_name='extentstatement',
            name='quantity_and_type_of_units',
        ),
        migrations.RemoveField(
            model_name='generalnote',
            name='note',
        ),
        migrations.RemoveField(
            model_name='metadata',
            name='custodial_history',
        ),
        migrations.RemoveField(
            model_name='metadata',
            name='date_of_material',
        ),
        migrations.RemoveField(
            model_name='metadata',
            name='disposition_authority',
        ),
        migrations.RemoveField(
            model_name='metadata',
            name='language_of_record',
        ),
        migrations.RemoveField(
            model_name='metadata',
            name='level_of_detail',
        ),
        migrations.RemoveField(
            model_name='metadata',
            name='scope_and_content',
        ),
        migrations.AddField(
            model_name='dateofcreationorrevision',
            name='creation_or_revision_agent',
            field=models.CharField(blank=True, default='', help_text='Record the name of the staff member who performed the action (creation or revision) on the accession record', max_length=256),
        ),
        migrations.AddField(
            model_name='extentstatement',
            name='quantity_and_unit_of_measure',
            field=models.TextField(blank=True, default='', help_text='Record the number and unit of measure expressing the quantity of the extent (e.g., 5 files, totalling 2.5MB)'),
        ),
        migrations.AddField(
            model_name='generalnote',
            name='general_note',
            field=models.TextField(default='N/A', help_text='Record any other information relevant to the accession record or accessioning process'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='metadata',
            name='date_of_materials',
            field=models.CharField(blank=True, default='', help_text='Provide a preliminary estimate of the date range or explicitly indicate if not it has yet been determined', max_length=512),
        ),
        migrations.AddField(
            model_name='metadata',
            name='language_of_accession_record',
            field=models.CharField(blank=True, default='en', help_text='Record the language(s) and script(s) used to create the accession record.', max_length=256),
        ),
        migrations.AddField(
            model_name='metadata',
            name='status',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='caais.status'),
        ),
        migrations.AddField(
            model_name='sourceofmaterial',
            name='organization',
            field=models.CharField(blank=True, default='', max_length=256),
        ),
        migrations.AlterField(
            model_name='archivalunit',
            name='archival_unit',
            field=models.TextField(help_text='Record the reference code and/or title of the archival unit to which the accession belongs'),
        ),
        migrations.AlterField(
            model_name='dateofcreationorrevision',
            name='metadata',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dates_of_creation_or_revision', to='caais.metadata'),
        ),
        migrations.AlterField(
            model_name='event',
            name='event_agent',
            field=models.CharField(blank=True, default='', help_text='Record the name of the staff member or application responsible for the event', max_length=256),
        ),
        migrations.AlterField(
            model_name='eventtype',
            name='name',
            field=models.CharField(help_text='Record the event type in accordance with a controlled vocabulary maintained by the repository', max_length=128, unique=True),
        ),
        migrations.AlterField(
            model_name='extentstatement',
            name='extent_type',
            field=models.ForeignKey(help_text='Record the extent statement type in accordance with a controlled vocabulary maintained by the repository.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='extent_statements', to='caais.extenttype'),
        ),
        migrations.AlterField(
            model_name='extenttype',
            name='name',
            field=models.CharField(help_text='Record the extent statement type in accordance with a controlled vocabulary maintained by the repository', max_length=128, unique=True),
        ),
        migrations.AlterField(
            model_name='identifier',
            name='identifier_note',
            field=models.TextField(blank=True, default='', help_text='Record any additional information that clarifies the purpose, use or generation of the identifier.'),
        ),
        migrations.AlterField(
            model_name='identifier',
            name='identifier_type',
            field=models.CharField(blank=True, default='', help_text='Record the identifier type in accordance with a controlled vocabulary maintained by the repository', max_length=128),
        ),
        migrations.AlterField(
            model_name='languageofmaterial',
            name='language_of_material',
            field=models.TextField(help_text='Record, at a minimum, the language that is predominantly found in the accessioned material'),
        ),
        migrations.AlterField(
            model_name='metadata',
            name='accession_title',
            field=models.CharField(blank=True, default='', help_text="Supply an accession title in accordance with the repository's descriptive standard, typically consisting of the creator's name(s) and the type of material", max_length=512),
        ),
        migrations.AlterField(
            model_name='metadata',
            name='repository',
            field=models.CharField(blank=True, default='', help_text="Give the authorized form(s) of the name of the institution in accordance with the repository's naming standard", max_length=512),
        ),
        migrations.AlterField(
            model_name='metadata',
            name='rules_or_conventions',
            field=models.CharField(blank=True, default='', help_text='Record information about the standards, rules or conventions that were followed when creating or maintaining the accession record.', max_length=256),
        ),
        migrations.AlterField(
            model_name='rightstype',
            name='name',
            field=models.CharField(help_text='Record the rights statement type in accordance with a controlled vocabulary maintained by the repository', max_length=128, unique=True),
        ),
        migrations.AlterField(
            model_name='sourceconfidentiality',
            name='name',
            field=models.CharField(help_text='Record source statements or source information that is for internal use only by the repository. Repositories should develop a controlled vocabulary with terms that can be translated into clear rules for handling source information', max_length=128, unique=True),
        ),
        migrations.AlterField(
            model_name='sourceofmaterial',
            name='email_address',
            field=models.CharField(blank=True, default='', max_length=256),
        ),
        migrations.AlterField(
            model_name='sourceofmaterial',
            name='phone_number',
            field=models.CharField(blank=True, default='', max_length=32),
        ),
        migrations.AlterField(
            model_name='sourceofmaterial',
            name='source_name',
            field=models.CharField(blank=True, default='', help_text="Record the source name in accordance with the repository's descriptive standard", max_length=256),
        ),
        migrations.AlterField(
            model_name='sourcerole',
            name='name',
            field=models.CharField(help_text='Record the source role (when known) in accordance with a controlled vocabulary maintained by the repository', max_length=128, unique=True),
        ),
        migrations.AlterField(
            model_name='sourcetype',
            name='name',
            field=models.CharField(help_text='Record the source in accordance with a controlled vocabulary maintained by the repository', max_length=128, unique=True),
        ),
        migrations.AlterField(
            model_name='status',
            name='name',
            field=models.CharField(help_text="Record the current position of the material with respect to the repository's workflows and business processes using a controlled vocabulary", max_length=128, unique=True),
        ),
        migrations.DeleteModel(
            name='DateOfCreationOrRevisionType',
        ),
        migrations.DeleteModel(
            name='MaterialAssessmentStatement',
        ),
        migrations.DeleteModel(
            name='MaterialAssessmentType',
        ),
        migrations.AddField(
            model_name='preservationrequirements',
            name='metadata',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='preservation_requirements', to='caais.metadata'),
        ),
        migrations.AddField(
            model_name='preservationrequirements',
            name='preservation_requirements_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='preservation_requirements', to='caais.preservationrequirementstype'),
        ),
        migrations.AddField(
            model_name='preliminaryscopeandcontent',
            name='metadata',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='preliminary_scope_and_contents', to='caais.metadata'),
        ),
        migrations.AddField(
            model_name='preliminarycustodialhistory',
            name='metadata',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='preliminary_custodial_histories', to='caais.metadata'),
        ),
        migrations.AddField(
            model_name='dispositionauthority',
            name='metadata',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disposition_authorities', to='caais.metadata'),
        ),
        migrations.AddField(
            model_name='associateddocumentation',
            name='associated_documentation_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='associated_documentation', to='caais.associateddocumentationtype'),
        ),
        migrations.AddField(
            model_name='associateddocumentation',
            name='metadata',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='associated_documentation', to='caais.metadata'),
        ),
        migrations.AddField(
            model_name='appraisal',
            name='appraisal_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appraisals', to='caais.appraisaltype'),
        ),
        migrations.AddField(
            model_name='appraisal',
            name='metadata',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appraisals', to='caais.metadata'),
        ),
        migrations.AddField(
            model_name='dateofcreationorrevision',
            name='creation_or_revision_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dates_of_creation_or_revision', to='caais.creationorrevisiontype'),
        ),
        migrations.AddField(
            model_name='extentstatement',
            name='carrier_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='extent_statements', to='caais.carriertype'),
        ),
        migrations.AddField(
            model_name='extentstatement',
            name='content_type',
            field=models.ForeignKey(help_text='Record the type of material contained in the units measured, considered as a form of communication or documentary genre.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='extent_statements', to='caais.contenttype'),
        ),
        migrations.AlterField(
            model_name='metadata',
            name='acquisition_method',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='caais.acquisitionmethod'),
        ),
    ]
