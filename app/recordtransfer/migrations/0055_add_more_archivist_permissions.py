# Generated by Django 4.2.20 on 2025-07-23 21:04

from django.contrib.auth.models import Group, Permission
from django.db import migrations


def add_more_archivist_permissions(apps, schema_editor):
    """Add additional permissions to archivist_user group."""
    group = Group.objects.get(name="archivist_user")
    existing_permissions = group.permissions.all()

    permission_codenames = [
        # caais: acquisitionmethod
        "add_acquisitionmethod",
        "change_acquisitionmethod",
        "delete_acquisitionmethod",
        "view_acquisitionmethod",
        # caais: appraisaltype
        "add_appraisaltype",
        "change_appraisaltype",
        "delete_appraisaltype",
        "view_appraisaltype",
        # caais: associateddocumentationtype
        "add_associateddocumentationtype",
        "change_associateddocumentationtype",
        "delete_associateddocumentationtype",
        "view_associateddocumentationtype",
        # caais: carriertype
        "add_carriertype",
        "change_carriertype",
        "delete_carriertype",
        "view_carriertype",
        # caais: extenttype
        "add_extenttype",
        "change_extenttype",
        "delete_extenttype",
        "view_extenttype",
        # caais: metadata
        "add_metadata",
        "change_metadata",
        "delete_metadata",
        "view_metadata",
        # caais: preservationrequirementstype
        "add_preservationrequirementstype",
        "change_preservationrequirementstype",
        "delete_preservationrequirementstype",
        "view_preservationrequirementstype",
        # caais: rightstype
        "add_rightstype",
        "change_rightstype",
        "delete_rightstype",
        "view_rightstype",
        # caais: sourceconfidentiality
        "add_sourceconfidentiality",
        "change_sourceconfidentiality",
        "delete_sourceconfidentiality",
        "view_sourceconfidentiality",
        # caais: sourcerole
        "add_sourcerole",
        "change_sourcerole",
        "delete_sourcerole",
        "view_sourcerole",
        # caais: sourcetype
        "add_sourcetype",
        "change_sourcetype",
        "delete_sourcetype",
        "view_sourcetype",
        # caais: status
        "add_status",
        "change_status",
        "view_status",
        # recordtransfer: job
        "view_job",
        # recordtransfer: permuploadedfile
        "view_permuploadedfile",
        # recordtransfer: sitesetting
        "view_sitesetting",
        # recordtransfer: submission
        "change_submission",
        "view_submission",
        # recordtransfer: submissiongroup
        "view_submissiongroup",
        # recordtransfer: tempuploadedfile
        "view_tempuploadedfile",
        # recordtransfer: uploadsession
        "view_uploadsession",
        # recordtransfer: user
        "view_user",
    ]

    for codename in permission_codenames:
        try:
            permission = Permission.objects.get(codename=codename)
            if permission not in existing_permissions:
                group.permissions.add(permission)
        except Permission.DoesNotExist:
            pass


class Migration(migrations.Migration):
    dependencies = [
        ("recordtransfer", "0054_job_uuid"),
    ]

    operations = [
        migrations.RunPython(add_more_archivist_permissions),
    ]
