name: Production Smoke Test Podman (via compose.prod.yml)

on:
  pull_request:
    branches:
      - master
      - 'feat-*'
  push:
    branches: [master]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  smoke-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Copy environment file
        run: cp example.prod.env .prod.env

      - name: Add SECRET_KEY to environment file
        run: |
          echo -e "\nSECRET_KEY=${{ secrets.SECRET_KEY }}" >> .prod.env

      - name: Set up Podman
        run: |
          sudo apt-get update
          sudo apt-get -y install podman
          pip install podman-compose
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          podman-compose --version

      - name: Start containers
        run: podman-compose -f compose.prod.yml up -d

      - name: Wait for app to be healthy
        run: |
          timeout=60
          elapsed=0
          echo "Waiting for application to be healthy (will time out after ${timeout}s)..."
          while [ $elapsed -lt $timeout ]; do
            if podman-compose -f compose.prod.yml ps | grep "secure-record-transfer-app" | grep -q "healthy"; then
              echo "Application is healthy!"
              break
            fi
            sleep 5
            elapsed=$((elapsed+5))
            echo "Still waiting... ($elapsed/$timeout seconds elapsed)"
          done
          if [ $elapsed -ge $timeout ]; then
            echo "Timeout reached. Application did not become healthy."
            echo "Final container status:"
            podman-compose -f compose.prod.yml ps
            echo "App logs:"
            podman-compose -f compose.prod.yml logs app
            exit 1
          fi

      # The port number is set in the compose.prod.yml file
      - name: Check homepage status
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:1337/)
          if [ $response -eq 200 ]; then
            echo "Homepage is returning 200 OK in production configuration (Podman)"
            exit 0
          else
            echo "Homepage returned status code $response in production configuration (Podman)"
            exit 1
          fi

      - name: Stop containers
        if: always()
        run: podman-compose -f compose.prod.yml down -v
